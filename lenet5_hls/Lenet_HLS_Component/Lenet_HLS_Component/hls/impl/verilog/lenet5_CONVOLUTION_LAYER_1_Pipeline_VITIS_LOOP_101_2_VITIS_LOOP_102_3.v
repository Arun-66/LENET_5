// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OBRAM_address0,
        OBRAM_ce0,
        OBRAM_q0,
        OBRAM_1_address0,
        OBRAM_1_ce0,
        OBRAM_1_q0,
        OBRAM_2_address0,
        OBRAM_2_ce0,
        OBRAM_2_q0,
        OBRAM_3_address0,
        OBRAM_3_ce0,
        OBRAM_3_q0,
        OBRAM_4_address0,
        OBRAM_4_ce0,
        OBRAM_4_q0,
        OBRAM_5_address0,
        OBRAM_5_ce0,
        OBRAM_5_q0,
        grp_fu_77_p_din0,
        grp_fu_77_p_din1,
        grp_fu_77_p_opcode,
        grp_fu_77_p_dout0,
        grp_fu_77_p_ce,
        grp_fu_81_p_din0,
        grp_fu_81_p_din1,
        grp_fu_81_p_opcode,
        grp_fu_81_p_dout0,
        grp_fu_81_p_ce,
        grp_fu_85_p_din0,
        grp_fu_85_p_din1,
        grp_fu_85_p_opcode,
        grp_fu_85_p_dout0,
        grp_fu_85_p_ce,
        grp_fu_89_p_din0,
        grp_fu_89_p_din1,
        grp_fu_89_p_dout0,
        grp_fu_89_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] OBRAM_address0;
output   OBRAM_ce0;
input  [31:0] OBRAM_q0;
output  [9:0] OBRAM_1_address0;
output   OBRAM_1_ce0;
input  [31:0] OBRAM_1_q0;
output  [9:0] OBRAM_2_address0;
output   OBRAM_2_ce0;
input  [31:0] OBRAM_2_q0;
output  [9:0] OBRAM_3_address0;
output   OBRAM_3_ce0;
input  [31:0] OBRAM_3_q0;
output  [9:0] OBRAM_4_address0;
output   OBRAM_4_ce0;
input  [31:0] OBRAM_4_q0;
output  [9:0] OBRAM_5_address0;
output   OBRAM_5_ce0;
input  [31:0] OBRAM_5_q0;
output  [31:0] grp_fu_77_p_din0;
output  [31:0] grp_fu_77_p_din1;
output  [1:0] grp_fu_77_p_opcode;
input  [31:0] grp_fu_77_p_dout0;
output   grp_fu_77_p_ce;
output  [31:0] grp_fu_81_p_din0;
output  [31:0] grp_fu_81_p_din1;
output  [1:0] grp_fu_81_p_opcode;
input  [31:0] grp_fu_81_p_dout0;
output   grp_fu_81_p_ce;
output  [31:0] grp_fu_85_p_din0;
output  [31:0] grp_fu_85_p_din1;
output  [1:0] grp_fu_85_p_opcode;
input  [31:0] grp_fu_85_p_dout0;
output   grp_fu_85_p_ce;
output  [31:0] grp_fu_89_p_din0;
output  [31:0] grp_fu_89_p_din1;
input  [31:0] grp_fu_89_p_dout0;
output   grp_fu_89_p_ce;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln101_fu_301_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln102_fu_316_p2;
reg   [0:0] icmp_ln102_reg_504;
wire   [9:0] select_ln101_fu_322_p3;
reg   [9:0] select_ln101_reg_509;
wire   [31:0] tmp_fu_388_p15;
reg   [31:0] tmp_reg_549;
wire   [9:0] add_ln104_fu_420_p2;
reg   [9:0] add_ln104_reg_554;
reg   [9:0] add_ln104_reg_554_pp0_iter2_reg;
reg   [10:0] tmp_1_reg_565;
reg   [10:0] tmp_1_reg_565_pp0_iter5_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter6_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter7_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter8_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter9_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter10_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter11_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter12_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter13_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter14_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter15_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter16_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter17_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter18_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter19_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter20_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter21_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter22_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter23_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter24_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter25_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter26_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter27_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter28_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter29_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter30_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter31_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter32_reg;
reg   [10:0] tmp_1_reg_565_pp0_iter33_reg;
reg   [31:0] x_assign_reg_570;
reg   [31:0] mul_i_reg_575;
wire   [2:0] trunc_ln104_fu_458_p1;
reg   [2:0] trunc_ln104_reg_580;
reg   [2:0] trunc_ln104_reg_580_pp0_iter15_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter16_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter17_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter18_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter19_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter20_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter21_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter22_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter23_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter24_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter25_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter26_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter27_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter28_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter29_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter30_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter31_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter32_reg;
reg   [2:0] trunc_ln104_reg_580_pp0_iter33_reg;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] tmp_s_reg_584;
reg   [31:0] exp2x_reg_589;
reg   [31:0] exp2x_reg_589_pp0_iter21_reg;
reg   [31:0] exp2x_reg_589_pp0_iter22_reg;
reg   [31:0] exp2x_reg_589_pp0_iter23_reg;
reg   [31:0] exp2x_reg_589_pp0_iter24_reg;
reg   [31:0] sub_i_reg_595;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] div_i_reg_600;
wire   [9:0] hconv1_local_local_address0;
wire   [9:0] hconv1_1_local_local_address0;
wire   [9:0] hconv1_2_local_local_address0;
wire   [9:0] hconv1_3_local_local_address0;
wire   [9:0] hconv1_4_local_local_address0;
wire   [63:0] zext_ln102_1_fu_330_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln104_1_fu_462_p1;
reg   [9:0] k_fu_84;
wire   [9:0] add_ln102_fu_340_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_k_load;
reg   [2:0] j_fu_88;
wire   [2:0] select_ln101_1_fu_365_p3;
reg   [12:0] indvar_flatten49_fu_92;
wire   [12:0] add_ln101_1_fu_307_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten49_load;
reg    OBRAM_ce0_local;
reg    OBRAM_1_ce0_local;
reg    OBRAM_2_ce0_local;
reg    OBRAM_3_ce0_local;
reg    OBRAM_4_ce0_local;
reg    OBRAM_5_ce0_local;
reg    hconv1_3_local_local_we0_local;
reg    hconv1_3_local_local_ce0_local;
reg    hconv1_2_local_local_we0_local;
reg    hconv1_2_local_local_ce0_local;
reg    hconv1_1_local_local_we0_local;
reg    hconv1_1_local_local_ce0_local;
reg    hconv1_local_local_we0_local;
reg    hconv1_local_local_ce0_local;
reg    hconv1_4_local_local_we0_local;
reg    hconv1_4_local_local_ce0_local;
wire   [2:0] add_ln101_fu_359_p2;
wire   [4:0] tmp_5_fu_376_p3;
wire   [31:0] tmp_fu_388_p13;
wire   [9:0] zext_ln102_fu_384_p1;
wire   [9:0] grp_fu_425_p0;
wire   [3:0] grp_fu_425_p1;
wire   [12:0] grp_fu_470_p3;
wire   [12:0] mul_ln104_1_fu_442_p0;
wire   [14:0] mul_ln104_1_fu_442_p1;
wire   [26:0] mul_ln104_1_fu_442_p2;
wire   [2:0] grp_fu_425_p2;
wire   [9:0] grp_fu_470_p0;
wire   [2:0] grp_fu_470_p1;
wire   [9:0] grp_fu_470_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_block_pp0_stage0_00001;
wire   [12:0] grp_fu_470_p10;
wire   [12:0] grp_fu_470_p20;
wire   [26:0] mul_ln104_1_fu_442_p00;
wire   [2:0] tmp_fu_388_p1;
wire   [2:0] tmp_fu_388_p3;
wire   [2:0] tmp_fu_388_p5;
wire   [2:0] tmp_fu_388_p7;
wire  signed [2:0] tmp_fu_388_p9;
wire  signed [2:0] tmp_fu_388_p11;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 k_fu_84 = 10'd0;
#0 j_fu_88 = 3'd0;
#0 indvar_flatten49_fu_92 = 13'd0;
#0 ap_done_reg = 1'b0;
end

lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3_hconv1_local_lbkb #(
    .DataWidth( 32 ),
    .AddressRange( 941 ),
    .AddressWidth( 10 ))
hconv1_local_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hconv1_local_local_address0),
    .ce0(hconv1_local_local_ce0_local),
    .we0(hconv1_local_local_we0_local),
    .d0(div_i_reg_600)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3_hconv1_local_lbkb #(
    .DataWidth( 32 ),
    .AddressRange( 941 ),
    .AddressWidth( 10 ))
hconv1_1_local_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hconv1_1_local_local_address0),
    .ce0(hconv1_1_local_local_ce0_local),
    .we0(hconv1_1_local_local_we0_local),
    .d0(div_i_reg_600)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3_hconv1_local_lbkb #(
    .DataWidth( 32 ),
    .AddressRange( 941 ),
    .AddressWidth( 10 ))
hconv1_2_local_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hconv1_2_local_local_address0),
    .ce0(hconv1_2_local_local_ce0_local),
    .we0(hconv1_2_local_local_we0_local),
    .d0(div_i_reg_600)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3_hconv1_local_lbkb #(
    .DataWidth( 32 ),
    .AddressRange( 941 ),
    .AddressWidth( 10 ))
hconv1_3_local_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hconv1_3_local_local_address0),
    .ce0(hconv1_3_local_local_ce0_local),
    .we0(hconv1_3_local_local_we0_local),
    .d0(div_i_reg_600)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3_hconv1_local_lbkb #(
    .DataWidth( 32 ),
    .AddressRange( 941 ),
    .AddressWidth( 10 ))
hconv1_4_local_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hconv1_4_local_local_address0),
    .ce0(hconv1_4_local_local_ce0_local),
    .we0(hconv1_4_local_local_we0_local),
    .d0(div_i_reg_600)
);

lenet5_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_i_reg_595),
    .din1(exp2x_reg_589_pp0_iter24_reg),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

lenet5_fexp_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_8_full_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(mul_i_reg_575),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

(* dissolve_hierarchy = "yes" *) lenet5_sparsemux_13_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_13_3_32_1_1_U31(
    .din0(OBRAM_q0),
    .din1(OBRAM_1_q0),
    .din2(OBRAM_2_q0),
    .din3(OBRAM_3_q0),
    .din4(OBRAM_4_q0),
    .din5(OBRAM_5_q0),
    .def(tmp_fu_388_p13),
    .sel(select_ln101_1_fu_365_p3),
    .dout(tmp_fu_388_p15)
);

lenet5_urem_10ns_4ns_3_14_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_10ns_4ns_3_14_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_425_p0),
    .din1(grp_fu_425_p1),
    .ce(1'b1),
    .dout(grp_fu_425_p2)
);

lenet5_mul_13ns_15ns_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 27 ))
mul_13ns_15ns_27_1_1_U33(
    .din0(mul_ln104_1_fu_442_p0),
    .din1(mul_ln104_1_fu_442_p1),
    .dout(mul_ln104_1_fu_442_p2)
);

lenet5_mac_muladd_10ns_3ns_10ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 13 ))
mac_muladd_10ns_3ns_10ns_13_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_470_p0),
    .din1(grp_fu_470_p1),
    .din2(grp_fu_470_p2),
    .ce(1'b1),
    .dout(grp_fu_470_p3)
);

lenet5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln101_fu_301_p2 == 1'd0))) begin
            indvar_flatten49_fu_92 <= add_ln101_1_fu_307_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten49_fu_92 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_88 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_88 <= select_ln101_1_fu_365_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln101_fu_301_p2 == 1'd0))) begin
            k_fu_84 <= add_ln102_fu_340_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_84 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln104_reg_554 <= add_ln104_fu_420_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln102_reg_504 <= icmp_ln102_fu_316_p2;
        select_ln101_reg_509 <= select_ln101_fu_322_p3;
        tmp_reg_549 <= tmp_fu_388_p15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln104_reg_554_pp0_iter2_reg <= add_ln104_reg_554;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        div_i_reg_600 <= grp_fu_274_p2;
        exp2x_reg_589 <= grp_fu_81_p_dout0;
        exp2x_reg_589_pp0_iter21_reg <= exp2x_reg_589;
        exp2x_reg_589_pp0_iter22_reg <= exp2x_reg_589_pp0_iter21_reg;
        exp2x_reg_589_pp0_iter23_reg <= exp2x_reg_589_pp0_iter22_reg;
        exp2x_reg_589_pp0_iter24_reg <= exp2x_reg_589_pp0_iter23_reg;
        mul_i_reg_575 <= grp_fu_89_p_dout0;
        sub_i_reg_595 <= grp_fu_85_p_dout0;
        tmp_1_reg_565 <= {{mul_ln104_1_fu_442_p2[26:16]}};
        tmp_1_reg_565_pp0_iter10_reg <= tmp_1_reg_565_pp0_iter9_reg;
        tmp_1_reg_565_pp0_iter11_reg <= tmp_1_reg_565_pp0_iter10_reg;
        tmp_1_reg_565_pp0_iter12_reg <= tmp_1_reg_565_pp0_iter11_reg;
        tmp_1_reg_565_pp0_iter13_reg <= tmp_1_reg_565_pp0_iter12_reg;
        tmp_1_reg_565_pp0_iter14_reg <= tmp_1_reg_565_pp0_iter13_reg;
        tmp_1_reg_565_pp0_iter15_reg <= tmp_1_reg_565_pp0_iter14_reg;
        tmp_1_reg_565_pp0_iter16_reg <= tmp_1_reg_565_pp0_iter15_reg;
        tmp_1_reg_565_pp0_iter17_reg <= tmp_1_reg_565_pp0_iter16_reg;
        tmp_1_reg_565_pp0_iter18_reg <= tmp_1_reg_565_pp0_iter17_reg;
        tmp_1_reg_565_pp0_iter19_reg <= tmp_1_reg_565_pp0_iter18_reg;
        tmp_1_reg_565_pp0_iter20_reg <= tmp_1_reg_565_pp0_iter19_reg;
        tmp_1_reg_565_pp0_iter21_reg <= tmp_1_reg_565_pp0_iter20_reg;
        tmp_1_reg_565_pp0_iter22_reg <= tmp_1_reg_565_pp0_iter21_reg;
        tmp_1_reg_565_pp0_iter23_reg <= tmp_1_reg_565_pp0_iter22_reg;
        tmp_1_reg_565_pp0_iter24_reg <= tmp_1_reg_565_pp0_iter23_reg;
        tmp_1_reg_565_pp0_iter25_reg <= tmp_1_reg_565_pp0_iter24_reg;
        tmp_1_reg_565_pp0_iter26_reg <= tmp_1_reg_565_pp0_iter25_reg;
        tmp_1_reg_565_pp0_iter27_reg <= tmp_1_reg_565_pp0_iter26_reg;
        tmp_1_reg_565_pp0_iter28_reg <= tmp_1_reg_565_pp0_iter27_reg;
        tmp_1_reg_565_pp0_iter29_reg <= tmp_1_reg_565_pp0_iter28_reg;
        tmp_1_reg_565_pp0_iter30_reg <= tmp_1_reg_565_pp0_iter29_reg;
        tmp_1_reg_565_pp0_iter31_reg <= tmp_1_reg_565_pp0_iter30_reg;
        tmp_1_reg_565_pp0_iter32_reg <= tmp_1_reg_565_pp0_iter31_reg;
        tmp_1_reg_565_pp0_iter33_reg <= tmp_1_reg_565_pp0_iter32_reg;
        tmp_1_reg_565_pp0_iter5_reg <= tmp_1_reg_565;
        tmp_1_reg_565_pp0_iter6_reg <= tmp_1_reg_565_pp0_iter5_reg;
        tmp_1_reg_565_pp0_iter7_reg <= tmp_1_reg_565_pp0_iter6_reg;
        tmp_1_reg_565_pp0_iter8_reg <= tmp_1_reg_565_pp0_iter7_reg;
        tmp_1_reg_565_pp0_iter9_reg <= tmp_1_reg_565_pp0_iter8_reg;
        tmp_s_reg_584 <= grp_fu_278_p2;
        trunc_ln104_reg_580 <= trunc_ln104_fu_458_p1;
        trunc_ln104_reg_580_pp0_iter15_reg <= trunc_ln104_reg_580;
        trunc_ln104_reg_580_pp0_iter16_reg <= trunc_ln104_reg_580_pp0_iter15_reg;
        trunc_ln104_reg_580_pp0_iter17_reg <= trunc_ln104_reg_580_pp0_iter16_reg;
        trunc_ln104_reg_580_pp0_iter18_reg <= trunc_ln104_reg_580_pp0_iter17_reg;
        trunc_ln104_reg_580_pp0_iter19_reg <= trunc_ln104_reg_580_pp0_iter18_reg;
        trunc_ln104_reg_580_pp0_iter20_reg <= trunc_ln104_reg_580_pp0_iter19_reg;
        trunc_ln104_reg_580_pp0_iter21_reg <= trunc_ln104_reg_580_pp0_iter20_reg;
        trunc_ln104_reg_580_pp0_iter22_reg <= trunc_ln104_reg_580_pp0_iter21_reg;
        trunc_ln104_reg_580_pp0_iter23_reg <= trunc_ln104_reg_580_pp0_iter22_reg;
        trunc_ln104_reg_580_pp0_iter24_reg <= trunc_ln104_reg_580_pp0_iter23_reg;
        trunc_ln104_reg_580_pp0_iter25_reg <= trunc_ln104_reg_580_pp0_iter24_reg;
        trunc_ln104_reg_580_pp0_iter26_reg <= trunc_ln104_reg_580_pp0_iter25_reg;
        trunc_ln104_reg_580_pp0_iter27_reg <= trunc_ln104_reg_580_pp0_iter26_reg;
        trunc_ln104_reg_580_pp0_iter28_reg <= trunc_ln104_reg_580_pp0_iter27_reg;
        trunc_ln104_reg_580_pp0_iter29_reg <= trunc_ln104_reg_580_pp0_iter28_reg;
        trunc_ln104_reg_580_pp0_iter30_reg <= trunc_ln104_reg_580_pp0_iter29_reg;
        trunc_ln104_reg_580_pp0_iter31_reg <= trunc_ln104_reg_580_pp0_iter30_reg;
        trunc_ln104_reg_580_pp0_iter32_reg <= trunc_ln104_reg_580_pp0_iter31_reg;
        trunc_ln104_reg_580_pp0_iter33_reg <= trunc_ln104_reg_580_pp0_iter32_reg;
        x_assign_reg_570 <= grp_fu_77_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_1_ce0_local = 1'b1;
    end else begin
        OBRAM_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_2_ce0_local = 1'b1;
    end else begin
        OBRAM_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_3_ce0_local = 1'b1;
    end else begin
        OBRAM_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_4_ce0_local = 1'b1;
    end else begin
        OBRAM_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_5_ce0_local = 1'b1;
    end else begin
        OBRAM_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OBRAM_ce0_local = 1'b1;
    end else begin
        OBRAM_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln101_fu_301_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) 
    & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten49_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten49_load = indvar_flatten49_fu_92;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_k_load = 10'd0;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_1_local_local_ce0_local = 1'b1;
    end else begin
        hconv1_1_local_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln104_reg_580_pp0_iter33_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_1_local_local_we0_local = 1'b1;
    end else begin
        hconv1_1_local_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_2_local_local_ce0_local = 1'b1;
    end else begin
        hconv1_2_local_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln104_reg_580_pp0_iter33_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_2_local_local_we0_local = 1'b1;
    end else begin
        hconv1_2_local_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_3_local_local_ce0_local = 1'b1;
    end else begin
        hconv1_3_local_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln104_reg_580_pp0_iter33_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_3_local_local_we0_local = 1'b1;
    end else begin
        hconv1_3_local_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_4_local_local_ce0_local = 1'b1;
    end else begin
        hconv1_4_local_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln104_reg_580_pp0_iter33_reg == 3'd0) & ~(trunc_ln104_reg_580_pp0_iter33_reg == 3'd1) & ~(trunc_ln104_reg_580_pp0_iter33_reg == 3'd2) & ~(trunc_ln104_reg_580_pp0_iter33_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_4_local_local_we0_local = 1'b1;
    end else begin
        hconv1_4_local_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_local_local_ce0_local = 1'b1;
    end else begin
        hconv1_local_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln104_reg_580_pp0_iter33_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        hconv1_local_local_we0_local = 1'b1;
    end else begin
        hconv1_local_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OBRAM_1_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_1_ce0 = OBRAM_1_ce0_local;

assign OBRAM_2_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_2_ce0 = OBRAM_2_ce0_local;

assign OBRAM_3_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_3_ce0 = OBRAM_3_ce0_local;

assign OBRAM_4_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_4_ce0 = OBRAM_4_ce0_local;

assign OBRAM_5_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_5_ce0 = OBRAM_5_ce0_local;

assign OBRAM_address0 = zext_ln102_1_fu_330_p1;

assign OBRAM_ce0 = OBRAM_ce0_local;

assign add_ln101_1_fu_307_p2 = (ap_sig_allocacmp_indvar_flatten49_load + 13'd1);

assign add_ln101_fu_359_p2 = (j_fu_88 + 3'd1);

assign add_ln102_fu_340_p2 = (select_ln101_fu_322_p3 + 10'd1);

assign add_ln104_fu_420_p2 = (select_ln101_reg_509 + zext_ln102_fu_384_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_425_p0 = (select_ln101_reg_509 + zext_ln102_fu_384_p1);

assign grp_fu_425_p1 = 10'd5;

assign grp_fu_470_p0 = 13'd780;

assign grp_fu_470_p1 = grp_fu_470_p10;

assign grp_fu_470_p10 = select_ln101_1_fu_365_p3;

assign grp_fu_470_p2 = grp_fu_470_p20;

assign grp_fu_470_p20 = add_ln104_reg_554_pp0_iter2_reg;

assign grp_fu_77_p_ce = 1'b1;

assign grp_fu_77_p_din0 = tmp_reg_549;

assign grp_fu_77_p_din1 = 'bx;

assign grp_fu_77_p_opcode = 2'd0;

assign grp_fu_81_p_ce = 1'b1;

assign grp_fu_81_p_din0 = tmp_s_reg_584;

assign grp_fu_81_p_din1 = 32'd1065353216;

assign grp_fu_81_p_opcode = 2'd0;

assign grp_fu_85_p_ce = 1'b1;

assign grp_fu_85_p_din0 = exp2x_reg_589;

assign grp_fu_85_p_din1 = 32'd3221225472;

assign grp_fu_85_p_opcode = 2'd0;

assign grp_fu_89_p_ce = 1'b1;

assign grp_fu_89_p_din0 = x_assign_reg_570;

assign grp_fu_89_p_din1 = 32'd1073741824;

assign hconv1_1_local_local_address0 = zext_ln104_1_fu_462_p1;

assign hconv1_2_local_local_address0 = zext_ln104_1_fu_462_p1;

assign hconv1_3_local_local_address0 = zext_ln104_1_fu_462_p1;

assign hconv1_4_local_local_address0 = zext_ln104_1_fu_462_p1;

assign hconv1_local_local_address0 = zext_ln104_1_fu_462_p1;

assign icmp_ln101_fu_301_p2 = ((ap_sig_allocacmp_indvar_flatten49_load == 13'd4704) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_316_p2 = ((ap_sig_allocacmp_k_load == 10'd784) ? 1'b1 : 1'b0);

assign mul_ln104_1_fu_442_p0 = mul_ln104_1_fu_442_p00;

assign mul_ln104_1_fu_442_p00 = grp_fu_470_p3;

assign mul_ln104_1_fu_442_p1 = 27'd13108;

assign select_ln101_1_fu_365_p3 = ((icmp_ln102_reg_504[0:0] == 1'b1) ? add_ln101_fu_359_p2 : j_fu_88);

assign select_ln101_fu_322_p3 = ((icmp_ln102_fu_316_p2[0:0] == 1'b1) ? 10'd0 : ap_sig_allocacmp_k_load);

assign tmp_5_fu_376_p3 = {{select_ln101_1_fu_365_p3}, {2'd0}};

assign tmp_fu_388_p13 = 'bx;

assign trunc_ln104_fu_458_p1 = grp_fu_425_p2[2:0];

assign zext_ln102_1_fu_330_p1 = select_ln101_fu_322_p3;

assign zext_ln102_fu_384_p1 = tmp_5_fu_376_p3;

assign zext_ln104_1_fu_462_p1 = tmp_1_reg_565_pp0_iter33_reg;

endmodule //lenet5_CONVOLUTION_LAYER_1_Pipeline_VITIS_LOOP_101_2_VITIS_LOOP_102_3
