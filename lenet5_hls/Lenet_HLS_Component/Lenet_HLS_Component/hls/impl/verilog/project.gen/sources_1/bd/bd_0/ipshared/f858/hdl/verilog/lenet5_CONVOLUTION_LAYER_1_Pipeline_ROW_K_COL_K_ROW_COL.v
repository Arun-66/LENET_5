// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        IBRAM_address0,
        IBRAM_ce0,
        IBRAM_q0,
        OBRAM_address0,
        OBRAM_ce0,
        OBRAM_we0,
        OBRAM_d0,
        OBRAM_address1,
        OBRAM_ce1,
        OBRAM_q1,
        OBRAM_1_address0,
        OBRAM_1_ce0,
        OBRAM_1_we0,
        OBRAM_1_d0,
        OBRAM_1_address1,
        OBRAM_1_ce1,
        OBRAM_1_q1,
        OBRAM_2_address0,
        OBRAM_2_ce0,
        OBRAM_2_we0,
        OBRAM_2_d0,
        OBRAM_2_address1,
        OBRAM_2_ce1,
        OBRAM_2_q1,
        OBRAM_3_address0,
        OBRAM_3_ce0,
        OBRAM_3_we0,
        OBRAM_3_d0,
        OBRAM_3_address1,
        OBRAM_3_ce1,
        OBRAM_3_q1,
        OBRAM_4_address0,
        OBRAM_4_ce0,
        OBRAM_4_we0,
        OBRAM_4_d0,
        OBRAM_4_address1,
        OBRAM_4_ce1,
        OBRAM_4_q1,
        OBRAM_5_address0,
        OBRAM_5_ce0,
        OBRAM_5_we0,
        OBRAM_5_d0,
        OBRAM_5_address1,
        OBRAM_5_ce1,
        OBRAM_5_q1,
        grp_fu_77_p_din0,
        grp_fu_77_p_din1,
        grp_fu_77_p_opcode,
        grp_fu_77_p_dout0,
        grp_fu_77_p_ce,
        grp_fu_81_p_din0,
        grp_fu_81_p_din1,
        grp_fu_81_p_opcode,
        grp_fu_81_p_dout0,
        grp_fu_81_p_ce,
        grp_fu_85_p_din0,
        grp_fu_85_p_din1,
        grp_fu_85_p_opcode,
        grp_fu_85_p_dout0,
        grp_fu_85_p_ce,
        grp_fu_89_p_din0,
        grp_fu_89_p_din1,
        grp_fu_89_p_dout0,
        grp_fu_89_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] IBRAM_address0;
output   IBRAM_ce0;
input  [31:0] IBRAM_q0;
output  [9:0] OBRAM_address0;
output   OBRAM_ce0;
output   OBRAM_we0;
output  [31:0] OBRAM_d0;
output  [9:0] OBRAM_address1;
output   OBRAM_ce1;
input  [31:0] OBRAM_q1;
output  [9:0] OBRAM_1_address0;
output   OBRAM_1_ce0;
output   OBRAM_1_we0;
output  [31:0] OBRAM_1_d0;
output  [9:0] OBRAM_1_address1;
output   OBRAM_1_ce1;
input  [31:0] OBRAM_1_q1;
output  [9:0] OBRAM_2_address0;
output   OBRAM_2_ce0;
output   OBRAM_2_we0;
output  [31:0] OBRAM_2_d0;
output  [9:0] OBRAM_2_address1;
output   OBRAM_2_ce1;
input  [31:0] OBRAM_2_q1;
output  [9:0] OBRAM_3_address0;
output   OBRAM_3_ce0;
output   OBRAM_3_we0;
output  [31:0] OBRAM_3_d0;
output  [9:0] OBRAM_3_address1;
output   OBRAM_3_ce1;
input  [31:0] OBRAM_3_q1;
output  [9:0] OBRAM_4_address0;
output   OBRAM_4_ce0;
output   OBRAM_4_we0;
output  [31:0] OBRAM_4_d0;
output  [9:0] OBRAM_4_address1;
output   OBRAM_4_ce1;
input  [31:0] OBRAM_4_q1;
output  [9:0] OBRAM_5_address0;
output   OBRAM_5_ce0;
output   OBRAM_5_we0;
output  [31:0] OBRAM_5_d0;
output  [9:0] OBRAM_5_address1;
output   OBRAM_5_ce1;
input  [31:0] OBRAM_5_q1;
output  [31:0] grp_fu_77_p_din0;
output  [31:0] grp_fu_77_p_din1;
output  [1:0] grp_fu_77_p_opcode;
input  [31:0] grp_fu_77_p_dout0;
output   grp_fu_77_p_ce;
output  [31:0] grp_fu_81_p_din0;
output  [31:0] grp_fu_81_p_din1;
output  [1:0] grp_fu_81_p_opcode;
input  [31:0] grp_fu_81_p_dout0;
output   grp_fu_81_p_ce;
output  [31:0] grp_fu_85_p_din0;
output  [31:0] grp_fu_85_p_din1;
output  [1:0] grp_fu_85_p_opcode;
input  [31:0] grp_fu_85_p_dout0;
output   grp_fu_85_p_ce;
output  [31:0] grp_fu_89_p_din0;
output  [31:0] grp_fu_89_p_din1;
input  [31:0] grp_fu_89_p_dout0;
output   grp_fu_89_p_ce;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln73_fu_397_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] col_mid2_fu_549_p3;
reg   [4:0] col_mid2_reg_845;
reg   [4:0] col_mid2_reg_845_pp0_iter2_reg;
reg   [4:0] col_mid2_reg_845_pp0_iter3_reg;
wire   [4:0] select_ln77_fu_557_p3;
reg   [4:0] select_ln77_reg_850;
reg   [4:0] select_ln77_reg_850_pp0_iter2_reg;
reg   [4:0] select_ln77_reg_850_pp0_iter3_reg;
wire   [0:0] empty_27_fu_613_p2;
reg   [0:0] empty_27_reg_886;
reg   [0:0] empty_27_reg_886_pp0_iter2_reg;
reg   [0:0] empty_27_reg_886_pp0_iter3_reg;
reg   [0:0] empty_27_reg_886_pp0_iter4_reg;
reg   [0:0] empty_27_reg_886_pp0_iter5_reg;
reg   [0:0] empty_27_reg_886_pp0_iter6_reg;
reg   [0:0] empty_27_reg_886_pp0_iter7_reg;
reg   [0:0] empty_27_reg_886_pp0_iter8_reg;
reg   [31:0] WBRAM_load_reg_901;
reg   [31:0] WBRAM_1_load_reg_906;
reg   [31:0] WBRAM_2_load_reg_911;
reg   [31:0] WBRAM_3_load_reg_916;
reg   [31:0] WBRAM_4_load_reg_921;
reg   [31:0] WBRAM_5_load_reg_926;
reg   [31:0] input_pixel_reg_931;
reg   [9:0] OBRAM_addr_reg_941;
reg   [9:0] OBRAM_addr_reg_941_pp0_iter5_reg;
reg   [9:0] OBRAM_addr_reg_941_pp0_iter6_reg;
reg   [9:0] OBRAM_addr_reg_941_pp0_iter7_reg;
reg   [9:0] OBRAM_addr_reg_941_pp0_iter8_reg;
reg   [9:0] OBRAM_addr_reg_941_pp0_iter9_reg;
reg   [9:0] OBRAM_1_addr_reg_947;
reg   [9:0] OBRAM_1_addr_reg_947_pp0_iter5_reg;
reg   [9:0] OBRAM_1_addr_reg_947_pp0_iter6_reg;
reg   [9:0] OBRAM_1_addr_reg_947_pp0_iter7_reg;
reg   [9:0] OBRAM_1_addr_reg_947_pp0_iter8_reg;
reg   [9:0] OBRAM_1_addr_reg_947_pp0_iter9_reg;
reg   [9:0] OBRAM_2_addr_reg_953;
reg   [9:0] OBRAM_2_addr_reg_953_pp0_iter5_reg;
reg   [9:0] OBRAM_2_addr_reg_953_pp0_iter6_reg;
reg   [9:0] OBRAM_2_addr_reg_953_pp0_iter7_reg;
reg   [9:0] OBRAM_2_addr_reg_953_pp0_iter8_reg;
reg   [9:0] OBRAM_2_addr_reg_953_pp0_iter9_reg;
reg   [9:0] OBRAM_3_addr_reg_959;
reg   [9:0] OBRAM_3_addr_reg_959_pp0_iter5_reg;
reg   [9:0] OBRAM_3_addr_reg_959_pp0_iter6_reg;
reg   [9:0] OBRAM_3_addr_reg_959_pp0_iter7_reg;
reg   [9:0] OBRAM_3_addr_reg_959_pp0_iter8_reg;
reg   [9:0] OBRAM_3_addr_reg_959_pp0_iter9_reg;
reg   [9:0] OBRAM_4_addr_reg_965;
reg   [9:0] OBRAM_4_addr_reg_965_pp0_iter5_reg;
reg   [9:0] OBRAM_4_addr_reg_965_pp0_iter6_reg;
reg   [9:0] OBRAM_4_addr_reg_965_pp0_iter7_reg;
reg   [9:0] OBRAM_4_addr_reg_965_pp0_iter8_reg;
reg   [9:0] OBRAM_4_addr_reg_965_pp0_iter9_reg;
reg   [9:0] OBRAM_5_addr_reg_971;
reg   [9:0] OBRAM_5_addr_reg_971_pp0_iter5_reg;
reg   [9:0] OBRAM_5_addr_reg_971_pp0_iter6_reg;
reg   [9:0] OBRAM_5_addr_reg_971_pp0_iter7_reg;
reg   [9:0] OBRAM_5_addr_reg_971_pp0_iter8_reg;
reg   [9:0] OBRAM_5_addr_reg_971_pp0_iter9_reg;
reg   [31:0] mul_reg_977;
reg   [31:0] mul_reg_977_pp0_iter6_reg;
reg   [31:0] mul_reg_977_pp0_iter7_reg;
reg   [31:0] mul_reg_977_pp0_iter8_reg;
wire   [31:0] grp_fu_339_p2;
reg   [31:0] mul110_1_reg_983;
reg   [31:0] mul110_1_reg_983_pp0_iter6_reg;
reg   [31:0] mul110_1_reg_983_pp0_iter7_reg;
reg   [31:0] mul110_1_reg_983_pp0_iter8_reg;
wire   [31:0] grp_fu_343_p2;
reg   [31:0] mul110_2_reg_989;
reg   [31:0] mul110_2_reg_989_pp0_iter6_reg;
reg   [31:0] mul110_2_reg_989_pp0_iter7_reg;
reg   [31:0] mul110_2_reg_989_pp0_iter8_reg;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] mul110_3_reg_995;
reg   [31:0] mul110_3_reg_995_pp0_iter6_reg;
reg   [31:0] mul110_3_reg_995_pp0_iter7_reg;
reg   [31:0] mul110_3_reg_995_pp0_iter8_reg;
wire   [31:0] grp_fu_351_p2;
reg   [31:0] mul110_4_reg_1001;
reg   [31:0] mul110_4_reg_1001_pp0_iter6_reg;
reg   [31:0] mul110_4_reg_1001_pp0_iter7_reg;
reg   [31:0] mul110_4_reg_1001_pp0_iter8_reg;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] mul110_5_reg_1007;
reg   [31:0] mul110_5_reg_1007_pp0_iter6_reg;
reg   [31:0] mul110_5_reg_1007_pp0_iter7_reg;
reg   [31:0] mul110_5_reg_1007_pp0_iter8_reg;
reg   [31:0] OBRAM_load_reg_1013;
reg   [31:0] OBRAM_1_load_reg_1018;
reg   [31:0] OBRAM_2_load_reg_1023;
reg   [31:0] OBRAM_3_load_reg_1028;
reg   [31:0] OBRAM_4_load_reg_1033;
reg   [31:0] OBRAM_5_load_reg_1038;
wire   [31:0] storemerge75105_fu_756_p3;
reg   [31:0] storemerge75105_reg_1043;
wire   [31:0] storemerge738789103_fu_762_p3;
reg   [31:0] storemerge738789103_reg_1048;
wire   [31:0] storemerge77798591101_fu_768_p3;
reg   [31:0] storemerge77798591101_reg_1053;
wire   [31:0] storemerge7281839399_fu_774_p3;
reg   [31:0] storemerge7281839399_reg_1058;
wire   [31:0] storemerge749597_fu_780_p3;
reg   [31:0] storemerge749597_reg_1063;
wire   [31:0] storemerge76_fu_786_p3;
reg   [31:0] storemerge76_reg_1068;
wire   [4:0] WBRAM_5_address0;
wire   [31:0] WBRAM_5_q0;
wire   [4:0] WBRAM_4_address0;
wire   [31:0] WBRAM_4_q0;
wire   [4:0] WBRAM_3_address0;
wire   [31:0] WBRAM_3_q0;
wire   [4:0] WBRAM_2_address0;
wire   [31:0] WBRAM_2_q0;
wire   [4:0] WBRAM_1_address0;
wire   [31:0] WBRAM_1_q0;
wire   [4:0] WBRAM_address0;
wire   [31:0] WBRAM_q0;
wire   [63:0] p_cast2_fu_597_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln81_fu_639_p1;
wire   [63:0] zext_ln87_fu_746_p1;
reg   [4:0] col_fu_72;
wire   [4:0] add_ln79_fu_644_p2;
wire    ap_loop_init;
reg   [4:0] row_fu_76;
reg   [9:0] indvar_flatten6_fu_80;
wire   [9:0] select_ln77_1_fu_656_p3;
reg   [2:0] col_k_fu_84;
wire   [2:0] select_ln75_fu_523_p3;
reg   [12:0] indvar_flatten19_fu_88;
wire   [12:0] select_ln75_1_fu_670_p3;
reg   [2:0] row_k_fu_92;
wire   [2:0] select_ln73_1_fu_477_p3;
reg   [14:0] indvar_flatten42_fu_96;
wire   [14:0] add_ln73_1_fu_403_p2;
reg    WBRAM_ce0_local;
reg    WBRAM_1_ce0_local;
reg    WBRAM_2_ce0_local;
reg    WBRAM_3_ce0_local;
reg    WBRAM_4_ce0_local;
reg    WBRAM_5_ce0_local;
reg    IBRAM_ce0_local;
reg    OBRAM_ce1_local;
reg    OBRAM_we0_local;
reg    OBRAM_ce0_local;
reg    OBRAM_1_ce1_local;
reg    OBRAM_1_we0_local;
reg    OBRAM_1_ce0_local;
reg    OBRAM_2_ce1_local;
reg    OBRAM_2_we0_local;
reg    OBRAM_2_ce0_local;
reg    OBRAM_3_ce1_local;
reg    OBRAM_3_we0_local;
reg    OBRAM_3_ce0_local;
reg    OBRAM_4_ce1_local;
reg    OBRAM_4_we0_local;
reg    OBRAM_4_ce0_local;
reg    OBRAM_5_ce1_local;
reg    OBRAM_5_we0_local;
reg    OBRAM_5_ce0_local;
wire   [0:0] icmp_ln75_fu_433_p2;
wire   [0:0] icmp_ln79_fu_453_p2;
wire   [0:0] xor_ln73_fu_447_p2;
wire   [0:0] icmp_ln77_fu_465_p2;
wire   [2:0] add_ln73_fu_427_p2;
wire   [2:0] select_ln73_fu_439_p3;
wire   [0:0] and_ln73_1_fu_471_p2;
wire   [0:0] empty_fu_491_p2;
wire   [0:0] exitcond_flatten8_not_fu_505_p2;
wire   [0:0] and_ln73_fu_459_p2;
wire   [0:0] not_exitcond_flatten8_mid241_fu_511_p2;
wire   [2:0] add_ln75_fu_485_p2;
wire   [4:0] row_mid213_fu_497_p3;
wire   [0:0] icmp_ln79_mid218_fu_517_p2;
wire   [0:0] empty_23_fu_537_p2;
wire   [0:0] empty_24_fu_543_p2;
wire   [4:0] add_ln77_fu_531_p2;
wire   [4:0] tmp_fu_569_p3;
wire   [4:0] zext_ln73_fu_565_p1;
wire   [4:0] add_ln73_2_fu_577_p2;
wire   [4:0] select_ln75_cast_fu_587_p1;
wire   [4:0] empty_25_fu_591_p2;
wire   [2:0] empty_26_fu_607_p2;
wire   [4:0] zext_ln73_1_fu_583_p1;
wire   [4:0] empty_28_fu_619_p2;
wire   [4:0] add_ln81_fu_625_p2;
wire   [9:0] tmp_4_fu_631_p3;
wire   [9:0] add_ln77_1_fu_650_p2;
wire   [12:0] add_ln75_1_fu_664_p2;
wire   [6:0] tmp_2_fu_720_p3;
wire   [9:0] p_shl_fu_713_p3;
wire   [9:0] p_shl12_fu_727_p1;
wire   [9:0] zext_ln79_fu_737_p1;
wire   [9:0] empty_29_fu_731_p2;
wire   [9:0] empty_30_fu_740_p2;
wire   [31:0] grp_fu_327_p2;
wire   [31:0] grp_fu_323_p2;
wire   [31:0] grp_fu_331_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 col_fu_72 = 5'd0;
#0 row_fu_76 = 5'd0;
#0 indvar_flatten6_fu_80 = 10'd0;
#0 col_k_fu_84 = 3'd0;
#0 indvar_flatten19_fu_88 = 13'd0;
#0 row_k_fu_92 = 3'd0;
#0 indvar_flatten42_fu_96 = 15'd0;
#0 ap_done_reg = 1'b0;
end

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_5_address0),
    .ce0(WBRAM_5_ce0_local),
    .q0(WBRAM_5_q0)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_4_address0),
    .ce0(WBRAM_4_ce0_local),
    .q0(WBRAM_4_q0)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_3_address0),
    .ce0(WBRAM_3_ce0_local),
    .q0(WBRAM_3_q0)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_2_address0),
    .ce0(WBRAM_2_ce0_local),
    .q0(WBRAM_2_q0)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_1_address0),
    .ce0(WBRAM_1_ce0_local),
    .q0(WBRAM_1_q0)
);

lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL_WBRAM_5_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
WBRAM_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(WBRAM_address0),
    .ce0(WBRAM_ce0_local),
    .q0(WBRAM_q0)
);

lenet5_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OBRAM_3_load_reg_1028),
    .din1(mul110_3_reg_995),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

lenet5_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OBRAM_4_load_reg_1033),
    .din1(mul110_4_reg_1001),
    .ce(1'b1),
    .dout(grp_fu_327_p2)
);

lenet5_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OBRAM_5_load_reg_1038),
    .din1(mul110_5_reg_1007),
    .ce(1'b1),
    .dout(grp_fu_331_p2)
);

lenet5_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_pixel_reg_931),
    .din1(WBRAM_1_load_reg_906),
    .ce(1'b1),
    .dout(grp_fu_339_p2)
);

lenet5_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_pixel_reg_931),
    .din1(WBRAM_2_load_reg_911),
    .ce(1'b1),
    .dout(grp_fu_343_p2)
);

lenet5_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_pixel_reg_931),
    .din1(WBRAM_3_load_reg_916),
    .ce(1'b1),
    .dout(grp_fu_347_p2)
);

lenet5_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_pixel_reg_931),
    .din1(WBRAM_4_load_reg_921),
    .ce(1'b1),
    .dout(grp_fu_351_p2)
);

lenet5_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_pixel_reg_931),
    .din1(WBRAM_5_load_reg_926),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

lenet5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_fu_72 <= 5'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            col_fu_72 <= add_ln79_fu_644_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_k_fu_84 <= 3'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            col_k_fu_84 <= select_ln75_fu_523_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten19_fu_88 <= 13'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten19_fu_88 <= select_ln75_1_fu_670_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten42_fu_96 <= 15'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten42_fu_96 <= add_ln73_1_fu_403_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_80 <= 10'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten6_fu_80 <= select_ln77_1_fu_656_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            row_fu_76 <= 5'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            row_fu_76 <= select_ln77_fu_557_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            row_k_fu_92 <= 3'd0;
        end else if (((icmp_ln73_fu_397_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            row_k_fu_92 <= select_ln73_1_fu_477_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        OBRAM_1_addr_reg_947 <= zext_ln87_fu_746_p1;
        OBRAM_1_addr_reg_947_pp0_iter5_reg <= OBRAM_1_addr_reg_947;
        OBRAM_1_addr_reg_947_pp0_iter6_reg <= OBRAM_1_addr_reg_947_pp0_iter5_reg;
        OBRAM_1_addr_reg_947_pp0_iter7_reg <= OBRAM_1_addr_reg_947_pp0_iter6_reg;
        OBRAM_1_addr_reg_947_pp0_iter8_reg <= OBRAM_1_addr_reg_947_pp0_iter7_reg;
        OBRAM_1_addr_reg_947_pp0_iter9_reg <= OBRAM_1_addr_reg_947_pp0_iter8_reg;
        OBRAM_2_addr_reg_953 <= zext_ln87_fu_746_p1;
        OBRAM_2_addr_reg_953_pp0_iter5_reg <= OBRAM_2_addr_reg_953;
        OBRAM_2_addr_reg_953_pp0_iter6_reg <= OBRAM_2_addr_reg_953_pp0_iter5_reg;
        OBRAM_2_addr_reg_953_pp0_iter7_reg <= OBRAM_2_addr_reg_953_pp0_iter6_reg;
        OBRAM_2_addr_reg_953_pp0_iter8_reg <= OBRAM_2_addr_reg_953_pp0_iter7_reg;
        OBRAM_2_addr_reg_953_pp0_iter9_reg <= OBRAM_2_addr_reg_953_pp0_iter8_reg;
        OBRAM_3_addr_reg_959 <= zext_ln87_fu_746_p1;
        OBRAM_3_addr_reg_959_pp0_iter5_reg <= OBRAM_3_addr_reg_959;
        OBRAM_3_addr_reg_959_pp0_iter6_reg <= OBRAM_3_addr_reg_959_pp0_iter5_reg;
        OBRAM_3_addr_reg_959_pp0_iter7_reg <= OBRAM_3_addr_reg_959_pp0_iter6_reg;
        OBRAM_3_addr_reg_959_pp0_iter8_reg <= OBRAM_3_addr_reg_959_pp0_iter7_reg;
        OBRAM_3_addr_reg_959_pp0_iter9_reg <= OBRAM_3_addr_reg_959_pp0_iter8_reg;
        OBRAM_4_addr_reg_965 <= zext_ln87_fu_746_p1;
        OBRAM_4_addr_reg_965_pp0_iter5_reg <= OBRAM_4_addr_reg_965;
        OBRAM_4_addr_reg_965_pp0_iter6_reg <= OBRAM_4_addr_reg_965_pp0_iter5_reg;
        OBRAM_4_addr_reg_965_pp0_iter7_reg <= OBRAM_4_addr_reg_965_pp0_iter6_reg;
        OBRAM_4_addr_reg_965_pp0_iter8_reg <= OBRAM_4_addr_reg_965_pp0_iter7_reg;
        OBRAM_4_addr_reg_965_pp0_iter9_reg <= OBRAM_4_addr_reg_965_pp0_iter8_reg;
        OBRAM_5_addr_reg_971 <= zext_ln87_fu_746_p1;
        OBRAM_5_addr_reg_971_pp0_iter5_reg <= OBRAM_5_addr_reg_971;
        OBRAM_5_addr_reg_971_pp0_iter6_reg <= OBRAM_5_addr_reg_971_pp0_iter5_reg;
        OBRAM_5_addr_reg_971_pp0_iter7_reg <= OBRAM_5_addr_reg_971_pp0_iter6_reg;
        OBRAM_5_addr_reg_971_pp0_iter8_reg <= OBRAM_5_addr_reg_971_pp0_iter7_reg;
        OBRAM_5_addr_reg_971_pp0_iter9_reg <= OBRAM_5_addr_reg_971_pp0_iter8_reg;
        OBRAM_addr_reg_941 <= zext_ln87_fu_746_p1;
        OBRAM_addr_reg_941_pp0_iter5_reg <= OBRAM_addr_reg_941;
        OBRAM_addr_reg_941_pp0_iter6_reg <= OBRAM_addr_reg_941_pp0_iter5_reg;
        OBRAM_addr_reg_941_pp0_iter7_reg <= OBRAM_addr_reg_941_pp0_iter6_reg;
        OBRAM_addr_reg_941_pp0_iter8_reg <= OBRAM_addr_reg_941_pp0_iter7_reg;
        OBRAM_addr_reg_941_pp0_iter9_reg <= OBRAM_addr_reg_941_pp0_iter8_reg;
        WBRAM_1_load_reg_906 <= WBRAM_1_q0;
        WBRAM_2_load_reg_911 <= WBRAM_2_q0;
        WBRAM_3_load_reg_916 <= WBRAM_3_q0;
        WBRAM_4_load_reg_921 <= WBRAM_4_q0;
        WBRAM_5_load_reg_926 <= WBRAM_5_q0;
        WBRAM_load_reg_901 <= WBRAM_q0;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        col_mid2_reg_845_pp0_iter2_reg <= col_mid2_reg_845;
        col_mid2_reg_845_pp0_iter3_reg <= col_mid2_reg_845_pp0_iter2_reg;
        empty_27_reg_886_pp0_iter2_reg <= empty_27_reg_886;
        empty_27_reg_886_pp0_iter3_reg <= empty_27_reg_886_pp0_iter2_reg;
        empty_27_reg_886_pp0_iter4_reg <= empty_27_reg_886_pp0_iter3_reg;
        empty_27_reg_886_pp0_iter5_reg <= empty_27_reg_886_pp0_iter4_reg;
        empty_27_reg_886_pp0_iter6_reg <= empty_27_reg_886_pp0_iter5_reg;
        empty_27_reg_886_pp0_iter7_reg <= empty_27_reg_886_pp0_iter6_reg;
        empty_27_reg_886_pp0_iter8_reg <= empty_27_reg_886_pp0_iter7_reg;
        input_pixel_reg_931 <= IBRAM_q0;
        mul110_1_reg_983 <= grp_fu_339_p2;
        mul110_1_reg_983_pp0_iter6_reg <= mul110_1_reg_983;
        mul110_1_reg_983_pp0_iter7_reg <= mul110_1_reg_983_pp0_iter6_reg;
        mul110_1_reg_983_pp0_iter8_reg <= mul110_1_reg_983_pp0_iter7_reg;
        mul110_2_reg_989 <= grp_fu_343_p2;
        mul110_2_reg_989_pp0_iter6_reg <= mul110_2_reg_989;
        mul110_2_reg_989_pp0_iter7_reg <= mul110_2_reg_989_pp0_iter6_reg;
        mul110_2_reg_989_pp0_iter8_reg <= mul110_2_reg_989_pp0_iter7_reg;
        mul110_3_reg_995 <= grp_fu_347_p2;
        mul110_3_reg_995_pp0_iter6_reg <= mul110_3_reg_995;
        mul110_3_reg_995_pp0_iter7_reg <= mul110_3_reg_995_pp0_iter6_reg;
        mul110_3_reg_995_pp0_iter8_reg <= mul110_3_reg_995_pp0_iter7_reg;
        mul110_4_reg_1001 <= grp_fu_351_p2;
        mul110_4_reg_1001_pp0_iter6_reg <= mul110_4_reg_1001;
        mul110_4_reg_1001_pp0_iter7_reg <= mul110_4_reg_1001_pp0_iter6_reg;
        mul110_4_reg_1001_pp0_iter8_reg <= mul110_4_reg_1001_pp0_iter7_reg;
        mul110_5_reg_1007 <= grp_fu_355_p2;
        mul110_5_reg_1007_pp0_iter6_reg <= mul110_5_reg_1007;
        mul110_5_reg_1007_pp0_iter7_reg <= mul110_5_reg_1007_pp0_iter6_reg;
        mul110_5_reg_1007_pp0_iter8_reg <= mul110_5_reg_1007_pp0_iter7_reg;
        mul_reg_977 <= grp_fu_89_p_dout0;
        mul_reg_977_pp0_iter6_reg <= mul_reg_977;
        mul_reg_977_pp0_iter7_reg <= mul_reg_977_pp0_iter6_reg;
        mul_reg_977_pp0_iter8_reg <= mul_reg_977_pp0_iter7_reg;
        select_ln77_reg_850_pp0_iter2_reg <= select_ln77_reg_850;
        select_ln77_reg_850_pp0_iter3_reg <= select_ln77_reg_850_pp0_iter2_reg;
        storemerge7281839399_reg_1058 <= storemerge7281839399_fu_774_p3;
        storemerge738789103_reg_1048 <= storemerge738789103_fu_762_p3;
        storemerge749597_reg_1063 <= storemerge749597_fu_780_p3;
        storemerge75105_reg_1043 <= storemerge75105_fu_756_p3;
        storemerge76_reg_1068 <= storemerge76_fu_786_p3;
        storemerge77798591101_reg_1053 <= storemerge77798591101_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        OBRAM_1_load_reg_1018 <= OBRAM_1_q1;
        OBRAM_2_load_reg_1023 <= OBRAM_2_q1;
        OBRAM_3_load_reg_1028 <= OBRAM_3_q1;
        OBRAM_4_load_reg_1033 <= OBRAM_4_q1;
        OBRAM_5_load_reg_1038 <= OBRAM_5_q1;
        OBRAM_load_reg_1013 <= OBRAM_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        col_mid2_reg_845 <= col_mid2_fu_549_p3;
        empty_27_reg_886 <= empty_27_fu_613_p2;
        select_ln77_reg_850 <= select_ln77_fu_557_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IBRAM_ce0_local = 1'b1;
    end else begin
        IBRAM_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_1_ce0_local = 1'b1;
    end else begin
        OBRAM_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_1_ce1_local = 1'b1;
    end else begin
        OBRAM_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_1_we0_local = 1'b1;
    end else begin
        OBRAM_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_2_ce0_local = 1'b1;
    end else begin
        OBRAM_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_2_ce1_local = 1'b1;
    end else begin
        OBRAM_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_2_we0_local = 1'b1;
    end else begin
        OBRAM_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_3_ce0_local = 1'b1;
    end else begin
        OBRAM_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_3_ce1_local = 1'b1;
    end else begin
        OBRAM_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_3_we0_local = 1'b1;
    end else begin
        OBRAM_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_4_ce0_local = 1'b1;
    end else begin
        OBRAM_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_4_ce1_local = 1'b1;
    end else begin
        OBRAM_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_4_we0_local = 1'b1;
    end else begin
        OBRAM_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_5_ce0_local = 1'b1;
    end else begin
        OBRAM_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_5_ce1_local = 1'b1;
    end else begin
        OBRAM_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_5_we0_local = 1'b1;
    end else begin
        OBRAM_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_ce0_local = 1'b1;
    end else begin
        OBRAM_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        OBRAM_ce1_local = 1'b1;
    end else begin
        OBRAM_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OBRAM_we0_local = 1'b1;
    end else begin
        OBRAM_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_1_ce0_local = 1'b1;
    end else begin
        WBRAM_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_2_ce0_local = 1'b1;
    end else begin
        WBRAM_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_3_ce0_local = 1'b1;
    end else begin
        WBRAM_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_4_ce0_local = 1'b1;
    end else begin
        WBRAM_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_5_ce0_local = 1'b1;
    end else begin
        WBRAM_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        WBRAM_ce0_local = 1'b1;
    end else begin
        WBRAM_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_fu_397_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IBRAM_address0 = zext_ln81_fu_639_p1;

assign IBRAM_ce0 = IBRAM_ce0_local;

assign OBRAM_1_address0 = OBRAM_1_addr_reg_947_pp0_iter9_reg;

assign OBRAM_1_address1 = zext_ln87_fu_746_p1;

assign OBRAM_1_ce0 = OBRAM_1_ce0_local;

assign OBRAM_1_ce1 = OBRAM_1_ce1_local;

assign OBRAM_1_d0 = storemerge7281839399_reg_1058;

assign OBRAM_1_we0 = OBRAM_1_we0_local;

assign OBRAM_2_address0 = OBRAM_2_addr_reg_953_pp0_iter9_reg;

assign OBRAM_2_address1 = zext_ln87_fu_746_p1;

assign OBRAM_2_ce0 = OBRAM_2_ce0_local;

assign OBRAM_2_ce1 = OBRAM_2_ce1_local;

assign OBRAM_2_d0 = storemerge738789103_reg_1048;

assign OBRAM_2_we0 = OBRAM_2_we0_local;

assign OBRAM_3_address0 = OBRAM_3_addr_reg_959_pp0_iter9_reg;

assign OBRAM_3_address1 = zext_ln87_fu_746_p1;

assign OBRAM_3_ce0 = OBRAM_3_ce0_local;

assign OBRAM_3_ce1 = OBRAM_3_ce1_local;

assign OBRAM_3_d0 = storemerge749597_reg_1063;

assign OBRAM_3_we0 = OBRAM_3_we0_local;

assign OBRAM_4_address0 = OBRAM_4_addr_reg_965_pp0_iter9_reg;

assign OBRAM_4_address1 = zext_ln87_fu_746_p1;

assign OBRAM_4_ce0 = OBRAM_4_ce0_local;

assign OBRAM_4_ce1 = OBRAM_4_ce1_local;

assign OBRAM_4_d0 = storemerge75105_reg_1043;

assign OBRAM_4_we0 = OBRAM_4_we0_local;

assign OBRAM_5_address0 = OBRAM_5_addr_reg_971_pp0_iter9_reg;

assign OBRAM_5_address1 = zext_ln87_fu_746_p1;

assign OBRAM_5_ce0 = OBRAM_5_ce0_local;

assign OBRAM_5_ce1 = OBRAM_5_ce1_local;

assign OBRAM_5_d0 = storemerge76_reg_1068;

assign OBRAM_5_we0 = OBRAM_5_we0_local;

assign OBRAM_address0 = OBRAM_addr_reg_941_pp0_iter9_reg;

assign OBRAM_address1 = zext_ln87_fu_746_p1;

assign OBRAM_ce0 = OBRAM_ce0_local;

assign OBRAM_ce1 = OBRAM_ce1_local;

assign OBRAM_d0 = storemerge77798591101_reg_1053;

assign OBRAM_we0 = OBRAM_we0_local;

assign WBRAM_1_address0 = p_cast2_fu_597_p1;

assign WBRAM_2_address0 = p_cast2_fu_597_p1;

assign WBRAM_3_address0 = p_cast2_fu_597_p1;

assign WBRAM_4_address0 = p_cast2_fu_597_p1;

assign WBRAM_5_address0 = p_cast2_fu_597_p1;

assign WBRAM_address0 = p_cast2_fu_597_p1;

assign add_ln73_1_fu_403_p2 = (indvar_flatten42_fu_96 + 15'd1);

assign add_ln73_2_fu_577_p2 = (tmp_fu_569_p3 + zext_ln73_fu_565_p1);

assign add_ln73_fu_427_p2 = (row_k_fu_92 + 3'd1);

assign add_ln75_1_fu_664_p2 = (indvar_flatten19_fu_88 + 13'd1);

assign add_ln75_fu_485_p2 = (select_ln73_fu_439_p3 + 3'd1);

assign add_ln77_1_fu_650_p2 = (indvar_flatten6_fu_80 + 10'd1);

assign add_ln77_fu_531_p2 = (row_mid213_fu_497_p3 + 5'd1);

assign add_ln79_fu_644_p2 = (col_mid2_fu_549_p3 + 5'd1);

assign add_ln81_fu_625_p2 = (col_mid2_fu_549_p3 + select_ln75_cast_fu_587_p1);

assign and_ln73_1_fu_471_p2 = (xor_ln73_fu_447_p2 & icmp_ln77_fu_465_p2);

assign and_ln73_fu_459_p2 = (xor_ln73_fu_447_p2 & icmp_ln79_fu_453_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign col_mid2_fu_549_p3 = ((empty_24_fu_543_p2[0:0] == 1'b1) ? 5'd0 : col_fu_72);

assign empty_23_fu_537_p2 = (icmp_ln79_mid218_fu_517_p2 | and_ln73_1_fu_471_p2);

assign empty_24_fu_543_p2 = (icmp_ln75_fu_433_p2 | empty_23_fu_537_p2);

assign empty_25_fu_591_p2 = (add_ln73_2_fu_577_p2 + select_ln75_cast_fu_587_p1);

assign empty_26_fu_607_p2 = (select_ln75_fu_523_p3 | select_ln73_1_fu_477_p3);

assign empty_27_fu_613_p2 = ((empty_26_fu_607_p2 == 3'd0) ? 1'b1 : 1'b0);

assign empty_28_fu_619_p2 = (select_ln77_fu_557_p3 + zext_ln73_1_fu_583_p1);

assign empty_29_fu_731_p2 = (p_shl_fu_713_p3 - p_shl12_fu_727_p1);

assign empty_30_fu_740_p2 = (zext_ln79_fu_737_p1 + empty_29_fu_731_p2);

assign empty_fu_491_p2 = (icmp_ln75_fu_433_p2 | and_ln73_1_fu_471_p2);

assign exitcond_flatten8_not_fu_505_p2 = (icmp_ln77_fu_465_p2 ^ 1'd1);

assign grp_fu_77_p_ce = 1'b1;

assign grp_fu_77_p_din0 = OBRAM_load_reg_1013;

assign grp_fu_77_p_din1 = mul_reg_977;

assign grp_fu_77_p_opcode = 2'd0;

assign grp_fu_81_p_ce = 1'b1;

assign grp_fu_81_p_din0 = OBRAM_1_load_reg_1018;

assign grp_fu_81_p_din1 = mul110_1_reg_983;

assign grp_fu_81_p_opcode = 2'd0;

assign grp_fu_85_p_ce = 1'b1;

assign grp_fu_85_p_din0 = OBRAM_2_load_reg_1023;

assign grp_fu_85_p_din1 = mul110_2_reg_989;

assign grp_fu_85_p_opcode = 2'd0;

assign grp_fu_89_p_ce = 1'b1;

assign grp_fu_89_p_din0 = input_pixel_reg_931;

assign grp_fu_89_p_din1 = WBRAM_load_reg_901;

assign icmp_ln73_fu_397_p2 = ((indvar_flatten42_fu_96 == 15'd19600) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_433_p2 = ((indvar_flatten19_fu_88 == 13'd3920) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_465_p2 = ((indvar_flatten6_fu_80 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_453_p2 = ((col_fu_72 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln79_mid218_fu_517_p2 = (not_exitcond_flatten8_mid241_fu_511_p2 & and_ln73_fu_459_p2);

assign not_exitcond_flatten8_mid241_fu_511_p2 = (icmp_ln75_fu_433_p2 | exitcond_flatten8_not_fu_505_p2);

assign p_cast2_fu_597_p1 = empty_25_fu_591_p2;

assign p_shl12_fu_727_p1 = tmp_2_fu_720_p3;

assign p_shl_fu_713_p3 = {{select_ln77_reg_850_pp0_iter3_reg}, {5'd0}};

assign row_mid213_fu_497_p3 = ((empty_fu_491_p2[0:0] == 1'b1) ? 5'd0 : row_fu_76);

assign select_ln73_1_fu_477_p3 = ((icmp_ln75_fu_433_p2[0:0] == 1'b1) ? add_ln73_fu_427_p2 : row_k_fu_92);

assign select_ln73_fu_439_p3 = ((icmp_ln75_fu_433_p2[0:0] == 1'b1) ? 3'd0 : col_k_fu_84);

assign select_ln75_1_fu_670_p3 = ((icmp_ln75_fu_433_p2[0:0] == 1'b1) ? 13'd1 : add_ln75_1_fu_664_p2);

assign select_ln75_cast_fu_587_p1 = select_ln75_fu_523_p3;

assign select_ln75_fu_523_p3 = ((and_ln73_1_fu_471_p2[0:0] == 1'b1) ? add_ln75_fu_485_p2 : select_ln73_fu_439_p3);

assign select_ln77_1_fu_656_p3 = ((empty_fu_491_p2[0:0] == 1'b1) ? 10'd1 : add_ln77_1_fu_650_p2);

assign select_ln77_fu_557_p3 = ((icmp_ln79_mid218_fu_517_p2[0:0] == 1'b1) ? add_ln77_fu_531_p2 : row_mid213_fu_497_p3);

assign storemerge7281839399_fu_774_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul110_1_reg_983_pp0_iter8_reg : grp_fu_81_p_dout0);

assign storemerge738789103_fu_762_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul110_2_reg_989_pp0_iter8_reg : grp_fu_85_p_dout0);

assign storemerge749597_fu_780_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul110_3_reg_995_pp0_iter8_reg : grp_fu_323_p2);

assign storemerge75105_fu_756_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul110_4_reg_1001_pp0_iter8_reg : grp_fu_327_p2);

assign storemerge76_fu_786_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul110_5_reg_1007_pp0_iter8_reg : grp_fu_331_p2);

assign storemerge77798591101_fu_768_p3 = ((empty_27_reg_886_pp0_iter8_reg[0:0] == 1'b1) ? mul_reg_977_pp0_iter8_reg : grp_fu_77_p_dout0);

assign tmp_2_fu_720_p3 = {{select_ln77_reg_850_pp0_iter3_reg}, {2'd0}};

assign tmp_4_fu_631_p3 = {{empty_28_fu_619_p2}, {add_ln81_fu_625_p2}};

assign tmp_fu_569_p3 = {{select_ln73_1_fu_477_p3}, {2'd0}};

assign xor_ln73_fu_447_p2 = (icmp_ln75_fu_433_p2 ^ 1'd1);

assign zext_ln73_1_fu_583_p1 = select_ln73_1_fu_477_p3;

assign zext_ln73_fu_565_p1 = select_ln73_1_fu_477_p3;

assign zext_ln79_fu_737_p1 = col_mid2_reg_845_pp0_iter3_reg;

assign zext_ln81_fu_639_p1 = tmp_4_fu_631_p3;

assign zext_ln87_fu_746_p1 = empty_30_fu_740_p2;

endmodule //lenet5_CONVOLUTION_LAYER_1_Pipeline_ROW_K_COL_K_ROW_COL
